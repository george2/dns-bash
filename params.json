{"name":"dns-bash","tagline":"","body":"#dns-bash\r\nThese are just a few DNS-related bash scripts I use to create a custom hosts file, among other things. They can be thought of in two ways: either as a set of DNS-backup scripts for the paranoid, or a way to significantly speed up browsing performance. \r\n\r\nHint: These were created when [SOPA](http://sopastrike.com/strike/) was under consideration. \r\n\r\n#How to use the scripts\r\n\r\n    addomains duckduckgo.com github.com www.example.com\r\n    # These are all the sites I want to have in my hosts file\r\n    # You can also just edit the 'domains' file manually, \r\n    #  see domains.example for format.\r\n    optdomains\r\n    # This will make the domains file smaller and more efficient.\r\n    # It is optional, but recommended.\r\n    makedomains\r\n    # This is where the important stuff happens.\r\n    sudo cp hosts /etc/hosts\r\n    # If you're going to use this as your hosts file, install it in etc.\r\n\r\nYou can also leave the generated hosts file in the working dir, and use the other scripts (`domgrep`, `domlookup`, `ldig`) to do random stuff with domains and their IPs. \r\n\r\nIf you want to brute-force the internet, run `findomains`, wait a few hundred years until it finishes, then look in disappointment at the small portion of the internet for which you now have an already-out-of-date list of IPs and domains. Have fun with that.\r\n\r\nFinally, if you want to test your setup to see what it would be like to live without dns, just run `dnsinkhole` as root. Press `Ctrl-D` or `Ctrl-C` to stop the sinkhole.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}